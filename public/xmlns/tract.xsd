<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:analytics="https://mobile-content-api.cru.org/xmlns/analytics"
    xmlns:content="https://mobile-content-api.cru.org/xmlns/content"
    xmlns:page="https://mobile-content-api.cru.org/xmlns/page"
    xmlns:tract="https://mobile-content-api.cru.org/xmlns/tract"
    xmlns:training="https://mobile-content-api.cru.org/xmlns/training" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified" targetNamespace="https://mobile-content-api.cru.org/xmlns/tract">

    <xs:import namespace="https://mobile-content-api.cru.org/xmlns/analytics" schemaLocation="analytics.xsd" />
    <xs:import namespace="https://mobile-content-api.cru.org/xmlns/content" schemaLocation="content.xsd" />
    <xs:import namespace="https://mobile-content-api.cru.org/xmlns/page" schemaLocation="page.xsd" />
    <xs:import namespace="https://mobile-content-api.cru.org/xmlns/training" schemaLocation="training.xsd" />

    <xs:element name="page">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="page:BasePageType">
                    <xs:sequence>
                        <xs:element name="header" type="tract:pageHeader" minOccurs="0" />
                        <xs:element name="hero" type="tract:pageHero" minOccurs="0" />
                        <xs:element name="cards" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="card" type="tract:card" maxOccurs="unbounded" />
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="modals" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="modal" type="tract:modal" maxOccurs="unbounded" />
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="call-to-action" type="tract:callToAction" minOccurs="0" />
                    </xs:sequence>

                    <xs:attribute name="card-text-color" type="content:colorValue">
                        <xs:annotation>
                            <xs:documentation>This attribute defines the text color for cards on this page. This will
                                default to the text-color set for the page.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!--
        Page Header
            background-color: DEFAULT( primary-color )
    -->
    <xs:complexType name="pageHeader">
        <xs:sequence>
            <xs:element name="number" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This element is the page number displayed in the header.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:all>
                        <xs:element ref="content:text">
                            <xs:annotation>
                                <xs:documentation>This element is the text content of the page number. The text-color
                                    attribute defaults to the primary-text-color of the closest ancestor container.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:all>
                </xs:complexType>
            </xs:element>
            <!--
                Page title, displayed in page header - REQUIRED
                    text-color: DEFAULT( primary-text-color )
            -->
            <xs:element name="title" type="content:textChild" />
        </xs:sequence>
        <xs:attribute name="background-color" type="content:colorValue" use="optional" />
        <xs:attributeGroup ref="training:tractHeader" />
    </xs:complexType>

    <!--
        HERO - Page content
            content directly in the page, primarily used when no cards exist
    -->
    <xs:complexType name="pageHero">
        <xs:sequence>
            <xs:element name="heading" minOccurs="0" maxOccurs="1" type="content:textChild">
                <xs:annotation>
                    <xs:documentation>This is the heading text of the hero. The content:text child element is the text
                        content of the hero heading. The text-color attribute defaults to the primary-color of the
                        closest ancestor container.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element ref="analytics:events" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Analytics events to trigger for the hero. The default trigger mode for analytics events on the
                        hero is "visible".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--
                Content section - OPTIONAL
                    text-scale: DEFAULT( 1.0 )
            -->
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:group ref="content:elements" />
                <!-- TODO: switch this to the full spacer element once Android can render them in heroes -->
                <xs:group ref="content:fixedSpacerOnly" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <!-- Tract Card -->
    <xs:complexType name="card">
        <xs:sequence>
            <xs:element name="label" type="content:textChild">
                <xs:annotation>
                    <xs:documentation>This is the label of a card. The text-color defaults to the primary-color of the
                        closest ancestor container.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element ref="analytics:events" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Analytics events to trigger for cards. The default trigger mode for analytics events on cards is
                        "visible".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--
                Content section - OPTIONAL
                    text-scale: DEFAULT( 1.0 )
            -->
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="content:elements" />
                <xs:element ref="content:spacer" />
            </xs:choice>
        </xs:sequence>

        <xs:attribute name="background-color" type="content:colorValue">
            <xs:annotation>
                <xs:documentation>This sets the background color of this card. This will default to the
                    content:card-background-color for this page.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <!-- background-image: DEFAULT( none ) -->
        <xs:attribute name="background-image" type="xs:string" use="optional" />
        <xs:attribute name="background-image-align" type="content:imageGravity" use="optional" default="center">
            <xs:annotation>
                <xs:documentation>This defines how we align the background image. This defaults to center.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="background-image-scale-type" type="content:imageScaleType" use="optional" default="fill-x">
            <xs:annotation>
                <xs:documentation>This defines how we should scale the background image. This defaults to fill-x.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="text-color" type="content:colorValue" use="optional">
            <xs:annotation>
                <xs:documentation>This attribute defines the text-color for this card. This will default to the
                    card-text-color set for the page.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <!-- hidden: DEFAULT( false ) whether this card is hidden. hidden cards can still be displayed if they have a listener that is triggered. -->
        <xs:attribute name="hidden" type="xs:boolean" use="optional" />
        <xs:attribute name="listeners" type="content:listeners">
            <xs:annotation>
                <xs:documentation>This attribute defines events that will trigger display of this card. Card listeners
                    are only "active" when the containing page is active.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="dismiss-listeners" type="content:listeners">
            <xs:annotation>
                <xs:documentation>This attribute defines events that will dismiss this card. Card dismiss-listeners are
                    only "active" when the card is the currently active card.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Call to Action (next page arrow / text) -->
    <xs:complexType name="callToAction">
        <xs:complexContent>
            <xs:extension base="content:textChild">
                <xs:attribute name="control-color" type="content:colorValue" use="optional">
                    <xs:annotation>
                        <xs:documentation>This attribute defines the rgba color of the call to action control (button).
                            DEFAULT is the primary-color attribute set at the nearest ancestor either page, or manifest.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attributeGroup ref="training:tractCallToAction" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="modal">
        <xs:annotation>
            <xs:documentation>A modal that is displayed when it's listener is triggered. Modals have the following
                default styles:
                - primary-color defaults to rgba(0,0,0,0)
                - primary-text-color defaults to rgba(255,255,255,1)
                - Buttons default to the outlined style
                - button-color defaults to rgba(255,255,255,1)
                - Text defaults to center alignment
                - text-color defaults to rgba(255,255,255,1)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="title" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the title line of the modal.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:all>
                        <xs:element ref="content:text">
                            <xs:annotation>
                                <xs:documentation>This element is the text content of the modal title.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:all>
                </xs:complexType>
            </xs:element>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="content:paragraph" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="listeners" type="content:listeners" use="required">
            <xs:annotation>
                <xs:documentation>This attribute defines events that will trigger display of this modal. Modal listeners
                    are only "active" when the containing page is active.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="dismiss-listeners" type="content:listeners" use="required">
            <xs:annotation>
                <xs:documentation>This attribute defines events that will dismiss this modal. Modal dismiss-listeners
                    are only "active" when the modal is being displayed.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="text-scale" type="xs:float" default="1">
            <xs:annotation>
                <xs:documentation>Defines how much to scale all the text content in this modal by.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
